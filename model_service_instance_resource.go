/*
 * Open Service Broker API
 *
 * The Open Service Broker API defines an HTTP(S) interface between Platforms and Service Brokers.
 *
 * API version: master - might contain changes that are not yet released
 * Contact: open-service-broker-api@googlegroups.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gosb

import (
	"encoding/json"
)

// ServiceInstanceResource struct for ServiceInstanceResource
type ServiceInstanceResource struct {
	ServiceId *string `json:"service_id,omitempty"`
	PlanId *string `json:"plan_id,omitempty"`
	DashboardUrl *string `json:"dashboard_url,omitempty"`
	Parameters *map[string]interface{} `json:"parameters,omitempty"`
	MaintenanceInfo *MaintenanceInfo `json:"maintenance_info,omitempty"`
	Metadata *ServiceInstanceMetadata `json:"metadata,omitempty"`
}

// NewServiceInstanceResource instantiates a new ServiceInstanceResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceInstanceResource() *ServiceInstanceResource {
	this := ServiceInstanceResource{}
	return &this
}

// NewServiceInstanceResourceWithDefaults instantiates a new ServiceInstanceResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceInstanceResourceWithDefaults() *ServiceInstanceResource {
	this := ServiceInstanceResource{}
	return &this
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *ServiceInstanceResource) GetServiceId() string {
	if o == nil || o.ServiceId == nil {
		var ret string
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceInstanceResource) GetServiceIdOk() (*string, bool) {
	if o == nil || o.ServiceId == nil {
		return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *ServiceInstanceResource) HasServiceId() bool {
	if o != nil && o.ServiceId != nil {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given string and assigns it to the ServiceId field.
func (o *ServiceInstanceResource) SetServiceId(v string) {
	o.ServiceId = &v
}

// GetPlanId returns the PlanId field value if set, zero value otherwise.
func (o *ServiceInstanceResource) GetPlanId() string {
	if o == nil || o.PlanId == nil {
		var ret string
		return ret
	}
	return *o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceInstanceResource) GetPlanIdOk() (*string, bool) {
	if o == nil || o.PlanId == nil {
		return nil, false
	}
	return o.PlanId, true
}

// HasPlanId returns a boolean if a field has been set.
func (o *ServiceInstanceResource) HasPlanId() bool {
	if o != nil && o.PlanId != nil {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given string and assigns it to the PlanId field.
func (o *ServiceInstanceResource) SetPlanId(v string) {
	o.PlanId = &v
}

// GetDashboardUrl returns the DashboardUrl field value if set, zero value otherwise.
func (o *ServiceInstanceResource) GetDashboardUrl() string {
	if o == nil || o.DashboardUrl == nil {
		var ret string
		return ret
	}
	return *o.DashboardUrl
}

// GetDashboardUrlOk returns a tuple with the DashboardUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceInstanceResource) GetDashboardUrlOk() (*string, bool) {
	if o == nil || o.DashboardUrl == nil {
		return nil, false
	}
	return o.DashboardUrl, true
}

// HasDashboardUrl returns a boolean if a field has been set.
func (o *ServiceInstanceResource) HasDashboardUrl() bool {
	if o != nil && o.DashboardUrl != nil {
		return true
	}

	return false
}

// SetDashboardUrl gets a reference to the given string and assigns it to the DashboardUrl field.
func (o *ServiceInstanceResource) SetDashboardUrl(v string) {
	o.DashboardUrl = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *ServiceInstanceResource) GetParameters() map[string]interface{} {
	if o == nil || o.Parameters == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceInstanceResource) GetParametersOk() (*map[string]interface{}, bool) {
	if o == nil || o.Parameters == nil {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *ServiceInstanceResource) HasParameters() bool {
	if o != nil && o.Parameters != nil {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]interface{} and assigns it to the Parameters field.
func (o *ServiceInstanceResource) SetParameters(v map[string]interface{}) {
	o.Parameters = &v
}

// GetMaintenanceInfo returns the MaintenanceInfo field value if set, zero value otherwise.
func (o *ServiceInstanceResource) GetMaintenanceInfo() MaintenanceInfo {
	if o == nil || o.MaintenanceInfo == nil {
		var ret MaintenanceInfo
		return ret
	}
	return *o.MaintenanceInfo
}

// GetMaintenanceInfoOk returns a tuple with the MaintenanceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceInstanceResource) GetMaintenanceInfoOk() (*MaintenanceInfo, bool) {
	if o == nil || o.MaintenanceInfo == nil {
		return nil, false
	}
	return o.MaintenanceInfo, true
}

// HasMaintenanceInfo returns a boolean if a field has been set.
func (o *ServiceInstanceResource) HasMaintenanceInfo() bool {
	if o != nil && o.MaintenanceInfo != nil {
		return true
	}

	return false
}

// SetMaintenanceInfo gets a reference to the given MaintenanceInfo and assigns it to the MaintenanceInfo field.
func (o *ServiceInstanceResource) SetMaintenanceInfo(v MaintenanceInfo) {
	o.MaintenanceInfo = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ServiceInstanceResource) GetMetadata() ServiceInstanceMetadata {
	if o == nil || o.Metadata == nil {
		var ret ServiceInstanceMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceInstanceResource) GetMetadataOk() (*ServiceInstanceMetadata, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ServiceInstanceResource) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given ServiceInstanceMetadata and assigns it to the Metadata field.
func (o *ServiceInstanceResource) SetMetadata(v ServiceInstanceMetadata) {
	o.Metadata = &v
}

func (o ServiceInstanceResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ServiceId != nil {
		toSerialize["service_id"] = o.ServiceId
	}
	if o.PlanId != nil {
		toSerialize["plan_id"] = o.PlanId
	}
	if o.DashboardUrl != nil {
		toSerialize["dashboard_url"] = o.DashboardUrl
	}
	if o.Parameters != nil {
		toSerialize["parameters"] = o.Parameters
	}
	if o.MaintenanceInfo != nil {
		toSerialize["maintenance_info"] = o.MaintenanceInfo
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableServiceInstanceResource struct {
	value *ServiceInstanceResource
	isSet bool
}

func (v NullableServiceInstanceResource) Get() *ServiceInstanceResource {
	return v.value
}

func (v *NullableServiceInstanceResource) Set(val *ServiceInstanceResource) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceInstanceResource) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceInstanceResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceInstanceResource(val *ServiceInstanceResource) *NullableServiceInstanceResource {
	return &NullableServiceInstanceResource{value: val, isSet: true}
}

func (v NullableServiceInstanceResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceInstanceResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


