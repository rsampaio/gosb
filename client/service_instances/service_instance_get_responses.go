// Code generated by go-swagger; DO NOT EDIT.

package service_instances

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/rsampaio/gosb/models"
)

// ServiceInstanceGetReader is a Reader for the ServiceInstanceGet structure.
type ServiceInstanceGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServiceInstanceGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewServiceInstanceGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewServiceInstanceGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewServiceInstanceGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewServiceInstanceGetPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewServiceInstanceGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewServiceInstanceGetOK creates a ServiceInstanceGetOK with default headers values
func NewServiceInstanceGetOK() *ServiceInstanceGetOK {
	return &ServiceInstanceGetOK{}
}

/* ServiceInstanceGetOK describes a response with status code 200, with default header values.

OK
*/
type ServiceInstanceGetOK struct {
	Payload *models.ServiceInstanceResource
}

func (o *ServiceInstanceGetOK) Error() string {
	return fmt.Sprintf("[GET /v2/service_instances/{instance_id}][%d] serviceInstanceGetOK  %+v", 200, o.Payload)
}
func (o *ServiceInstanceGetOK) GetPayload() *models.ServiceInstanceResource {
	return o.Payload
}

func (o *ServiceInstanceGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceInstanceResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceInstanceGetUnauthorized creates a ServiceInstanceGetUnauthorized with default headers values
func NewServiceInstanceGetUnauthorized() *ServiceInstanceGetUnauthorized {
	return &ServiceInstanceGetUnauthorized{}
}

/* ServiceInstanceGetUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ServiceInstanceGetUnauthorized struct {
	Payload *models.Error
}

func (o *ServiceInstanceGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/service_instances/{instance_id}][%d] serviceInstanceGetUnauthorized  %+v", 401, o.Payload)
}
func (o *ServiceInstanceGetUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ServiceInstanceGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceInstanceGetNotFound creates a ServiceInstanceGetNotFound with default headers values
func NewServiceInstanceGetNotFound() *ServiceInstanceGetNotFound {
	return &ServiceInstanceGetNotFound{}
}

/* ServiceInstanceGetNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ServiceInstanceGetNotFound struct {
	Payload *models.Error
}

func (o *ServiceInstanceGetNotFound) Error() string {
	return fmt.Sprintf("[GET /v2/service_instances/{instance_id}][%d] serviceInstanceGetNotFound  %+v", 404, o.Payload)
}
func (o *ServiceInstanceGetNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ServiceInstanceGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceInstanceGetPreconditionFailed creates a ServiceInstanceGetPreconditionFailed with default headers values
func NewServiceInstanceGetPreconditionFailed() *ServiceInstanceGetPreconditionFailed {
	return &ServiceInstanceGetPreconditionFailed{}
}

/* ServiceInstanceGetPreconditionFailed describes a response with status code 412, with default header values.

Precondition Failed
*/
type ServiceInstanceGetPreconditionFailed struct {
	Payload *models.Error
}

func (o *ServiceInstanceGetPreconditionFailed) Error() string {
	return fmt.Sprintf("[GET /v2/service_instances/{instance_id}][%d] serviceInstanceGetPreconditionFailed  %+v", 412, o.Payload)
}
func (o *ServiceInstanceGetPreconditionFailed) GetPayload() *models.Error {
	return o.Payload
}

func (o *ServiceInstanceGetPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceInstanceGetDefault creates a ServiceInstanceGetDefault with default headers values
func NewServiceInstanceGetDefault(code int) *ServiceInstanceGetDefault {
	return &ServiceInstanceGetDefault{
		_statusCode: code,
	}
}

/* ServiceInstanceGetDefault describes a response with status code -1, with default header values.

Unexpected
*/
type ServiceInstanceGetDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the service instance get default response
func (o *ServiceInstanceGetDefault) Code() int {
	return o._statusCode
}

func (o *ServiceInstanceGetDefault) Error() string {
	return fmt.Sprintf("[GET /v2/service_instances/{instance_id}][%d] serviceInstance.get default  %+v", o._statusCode, o.Payload)
}
func (o *ServiceInstanceGetDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *ServiceInstanceGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
