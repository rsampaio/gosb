// Code generated by go-swagger; DO NOT EDIT.

package service_bindings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/rsampaio/gosb/models"
)

// ServiceBindingBindingReader is a Reader for the ServiceBindingBinding structure.
type ServiceBindingBindingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServiceBindingBindingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewServiceBindingBindingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewServiceBindingBindingCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewServiceBindingBindingAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewServiceBindingBindingBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewServiceBindingBindingUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewServiceBindingBindingConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewServiceBindingBindingGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewServiceBindingBindingPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewServiceBindingBindingUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewServiceBindingBindingDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewServiceBindingBindingOK creates a ServiceBindingBindingOK with default headers values
func NewServiceBindingBindingOK() *ServiceBindingBindingOK {
	return &ServiceBindingBindingOK{}
}

/* ServiceBindingBindingOK describes a response with status code 200, with default header values.

OK
*/
type ServiceBindingBindingOK struct {
	Payload *models.ServiceBindingResponse
}

func (o *ServiceBindingBindingOK) Error() string {
	return fmt.Sprintf("[PUT /v2/service_instances/{instance_id}/service_bindings/{binding_id}][%d] serviceBindingBindingOK  %+v", 200, o.Payload)
}
func (o *ServiceBindingBindingOK) GetPayload() *models.ServiceBindingResponse {
	return o.Payload
}

func (o *ServiceBindingBindingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceBindingResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceBindingBindingCreated creates a ServiceBindingBindingCreated with default headers values
func NewServiceBindingBindingCreated() *ServiceBindingBindingCreated {
	return &ServiceBindingBindingCreated{}
}

/* ServiceBindingBindingCreated describes a response with status code 201, with default header values.

Created
*/
type ServiceBindingBindingCreated struct {
	Payload *models.ServiceBindingResponse
}

func (o *ServiceBindingBindingCreated) Error() string {
	return fmt.Sprintf("[PUT /v2/service_instances/{instance_id}/service_bindings/{binding_id}][%d] serviceBindingBindingCreated  %+v", 201, o.Payload)
}
func (o *ServiceBindingBindingCreated) GetPayload() *models.ServiceBindingResponse {
	return o.Payload
}

func (o *ServiceBindingBindingCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceBindingResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceBindingBindingAccepted creates a ServiceBindingBindingAccepted with default headers values
func NewServiceBindingBindingAccepted() *ServiceBindingBindingAccepted {
	return &ServiceBindingBindingAccepted{}
}

/* ServiceBindingBindingAccepted describes a response with status code 202, with default header values.

Accepted
*/
type ServiceBindingBindingAccepted struct {
	Payload *models.AsyncOperation
}

func (o *ServiceBindingBindingAccepted) Error() string {
	return fmt.Sprintf("[PUT /v2/service_instances/{instance_id}/service_bindings/{binding_id}][%d] serviceBindingBindingAccepted  %+v", 202, o.Payload)
}
func (o *ServiceBindingBindingAccepted) GetPayload() *models.AsyncOperation {
	return o.Payload
}

func (o *ServiceBindingBindingAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AsyncOperation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceBindingBindingBadRequest creates a ServiceBindingBindingBadRequest with default headers values
func NewServiceBindingBindingBadRequest() *ServiceBindingBindingBadRequest {
	return &ServiceBindingBindingBadRequest{}
}

/* ServiceBindingBindingBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ServiceBindingBindingBadRequest struct {
	Payload *models.Error
}

func (o *ServiceBindingBindingBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v2/service_instances/{instance_id}/service_bindings/{binding_id}][%d] serviceBindingBindingBadRequest  %+v", 400, o.Payload)
}
func (o *ServiceBindingBindingBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ServiceBindingBindingBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceBindingBindingUnauthorized creates a ServiceBindingBindingUnauthorized with default headers values
func NewServiceBindingBindingUnauthorized() *ServiceBindingBindingUnauthorized {
	return &ServiceBindingBindingUnauthorized{}
}

/* ServiceBindingBindingUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ServiceBindingBindingUnauthorized struct {
	Payload *models.Error
}

func (o *ServiceBindingBindingUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v2/service_instances/{instance_id}/service_bindings/{binding_id}][%d] serviceBindingBindingUnauthorized  %+v", 401, o.Payload)
}
func (o *ServiceBindingBindingUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ServiceBindingBindingUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceBindingBindingConflict creates a ServiceBindingBindingConflict with default headers values
func NewServiceBindingBindingConflict() *ServiceBindingBindingConflict {
	return &ServiceBindingBindingConflict{}
}

/* ServiceBindingBindingConflict describes a response with status code 409, with default header values.

Conflict
*/
type ServiceBindingBindingConflict struct {
	Payload *models.Error
}

func (o *ServiceBindingBindingConflict) Error() string {
	return fmt.Sprintf("[PUT /v2/service_instances/{instance_id}/service_bindings/{binding_id}][%d] serviceBindingBindingConflict  %+v", 409, o.Payload)
}
func (o *ServiceBindingBindingConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *ServiceBindingBindingConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceBindingBindingGone creates a ServiceBindingBindingGone with default headers values
func NewServiceBindingBindingGone() *ServiceBindingBindingGone {
	return &ServiceBindingBindingGone{}
}

/* ServiceBindingBindingGone describes a response with status code 410, with default header values.

Gone
*/
type ServiceBindingBindingGone struct {
	Payload *models.Error
}

func (o *ServiceBindingBindingGone) Error() string {
	return fmt.Sprintf("[PUT /v2/service_instances/{instance_id}/service_bindings/{binding_id}][%d] serviceBindingBindingGone  %+v", 410, o.Payload)
}
func (o *ServiceBindingBindingGone) GetPayload() *models.Error {
	return o.Payload
}

func (o *ServiceBindingBindingGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceBindingBindingPreconditionFailed creates a ServiceBindingBindingPreconditionFailed with default headers values
func NewServiceBindingBindingPreconditionFailed() *ServiceBindingBindingPreconditionFailed {
	return &ServiceBindingBindingPreconditionFailed{}
}

/* ServiceBindingBindingPreconditionFailed describes a response with status code 412, with default header values.

Precondition Failed
*/
type ServiceBindingBindingPreconditionFailed struct {
	Payload *models.Error
}

func (o *ServiceBindingBindingPreconditionFailed) Error() string {
	return fmt.Sprintf("[PUT /v2/service_instances/{instance_id}/service_bindings/{binding_id}][%d] serviceBindingBindingPreconditionFailed  %+v", 412, o.Payload)
}
func (o *ServiceBindingBindingPreconditionFailed) GetPayload() *models.Error {
	return o.Payload
}

func (o *ServiceBindingBindingPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceBindingBindingUnprocessableEntity creates a ServiceBindingBindingUnprocessableEntity with default headers values
func NewServiceBindingBindingUnprocessableEntity() *ServiceBindingBindingUnprocessableEntity {
	return &ServiceBindingBindingUnprocessableEntity{}
}

/* ServiceBindingBindingUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type ServiceBindingBindingUnprocessableEntity struct {
	Payload *models.Error
}

func (o *ServiceBindingBindingUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /v2/service_instances/{instance_id}/service_bindings/{binding_id}][%d] serviceBindingBindingUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *ServiceBindingBindingUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *ServiceBindingBindingUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceBindingBindingDefault creates a ServiceBindingBindingDefault with default headers values
func NewServiceBindingBindingDefault(code int) *ServiceBindingBindingDefault {
	return &ServiceBindingBindingDefault{
		_statusCode: code,
	}
}

/* ServiceBindingBindingDefault describes a response with status code -1, with default header values.

Unexpected
*/
type ServiceBindingBindingDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the service binding binding default response
func (o *ServiceBindingBindingDefault) Code() int {
	return o._statusCode
}

func (o *ServiceBindingBindingDefault) Error() string {
	return fmt.Sprintf("[PUT /v2/service_instances/{instance_id}/service_bindings/{binding_id}][%d] serviceBinding.binding default  %+v", o._statusCode, o.Payload)
}
func (o *ServiceBindingBindingDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *ServiceBindingBindingDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
