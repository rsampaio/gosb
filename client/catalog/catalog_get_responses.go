// Code generated by go-swagger; DO NOT EDIT.

package catalog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/rsampaio/gosb/models"
)

// CatalogGetReader is a Reader for the CatalogGet structure.
type CatalogGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CatalogGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCatalogGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCatalogGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewCatalogGetPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCatalogGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCatalogGetOK creates a CatalogGetOK with default headers values
func NewCatalogGetOK() *CatalogGetOK {
	return &CatalogGetOK{}
}

/* CatalogGetOK describes a response with status code 200, with default header values.

catalog response
*/
type CatalogGetOK struct {
	Payload *models.Catalog
}

func (o *CatalogGetOK) Error() string {
	return fmt.Sprintf("[GET /v2/catalog][%d] catalogGetOK  %+v", 200, o.Payload)
}
func (o *CatalogGetOK) GetPayload() *models.Catalog {
	return o.Payload
}

func (o *CatalogGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Catalog)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogGetUnauthorized creates a CatalogGetUnauthorized with default headers values
func NewCatalogGetUnauthorized() *CatalogGetUnauthorized {
	return &CatalogGetUnauthorized{}
}

/* CatalogGetUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CatalogGetUnauthorized struct {
	Payload *models.Error
}

func (o *CatalogGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/catalog][%d] catalogGetUnauthorized  %+v", 401, o.Payload)
}
func (o *CatalogGetUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *CatalogGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogGetPreconditionFailed creates a CatalogGetPreconditionFailed with default headers values
func NewCatalogGetPreconditionFailed() *CatalogGetPreconditionFailed {
	return &CatalogGetPreconditionFailed{}
}

/* CatalogGetPreconditionFailed describes a response with status code 412, with default header values.

Precondition Failed
*/
type CatalogGetPreconditionFailed struct {
	Payload *models.Error
}

func (o *CatalogGetPreconditionFailed) Error() string {
	return fmt.Sprintf("[GET /v2/catalog][%d] catalogGetPreconditionFailed  %+v", 412, o.Payload)
}
func (o *CatalogGetPreconditionFailed) GetPayload() *models.Error {
	return o.Payload
}

func (o *CatalogGetPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogGetDefault creates a CatalogGetDefault with default headers values
func NewCatalogGetDefault(code int) *CatalogGetDefault {
	return &CatalogGetDefault{
		_statusCode: code,
	}
}

/* CatalogGetDefault describes a response with status code -1, with default header values.

Unexpected
*/
type CatalogGetDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the catalog get default response
func (o *CatalogGetDefault) Code() int {
	return o._statusCode
}

func (o *CatalogGetDefault) Error() string {
	return fmt.Sprintf("[GET /v2/catalog][%d] catalog.get default  %+v", o._statusCode, o.Payload)
}
func (o *CatalogGetDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *CatalogGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
