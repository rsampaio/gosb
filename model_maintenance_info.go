/*
 * Open Service Broker API
 *
 * The Open Service Broker API defines an HTTP(S) interface between Platforms and Service Brokers.
 *
 * API version: master - might contain changes that are not yet released
 * Contact: open-service-broker-api@googlegroups.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gosb

import (
	"encoding/json"
)

// MaintenanceInfo struct for MaintenanceInfo
type MaintenanceInfo struct {
	Version string `json:"version"`
	Description *string `json:"description,omitempty"`
}

// NewMaintenanceInfo instantiates a new MaintenanceInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMaintenanceInfo(version string, ) *MaintenanceInfo {
	this := MaintenanceInfo{}
	this.Version = version
	return &this
}

// NewMaintenanceInfoWithDefaults instantiates a new MaintenanceInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMaintenanceInfoWithDefaults() *MaintenanceInfo {
	this := MaintenanceInfo{}
	return &this
}

// GetVersion returns the Version field value
func (o *MaintenanceInfo) GetVersion() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *MaintenanceInfo) GetVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *MaintenanceInfo) SetVersion(v string) {
	o.Version = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MaintenanceInfo) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MaintenanceInfo) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MaintenanceInfo) SetDescription(v string) {
	o.Description = &v
}

func (o MaintenanceInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["version"] = o.Version
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableMaintenanceInfo struct {
	value *MaintenanceInfo
	isSet bool
}

func (v NullableMaintenanceInfo) Get() *MaintenanceInfo {
	return v.value
}

func (v *NullableMaintenanceInfo) Set(val *MaintenanceInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMaintenanceInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMaintenanceInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMaintenanceInfo(val *MaintenanceInfo) *NullableMaintenanceInfo {
	return &NullableMaintenanceInfo{value: val, isSet: true}
}

func (v NullableMaintenanceInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMaintenanceInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


