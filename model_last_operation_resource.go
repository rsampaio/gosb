/*
 * Open Service Broker API
 *
 * The Open Service Broker API defines an HTTP(S) interface between Platforms and Service Brokers.
 *
 * API version: master - might contain changes that are not yet released
 * Contact: open-service-broker-api@googlegroups.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gosb

import (
	"encoding/json"
)

// LastOperationResource struct for LastOperationResource
type LastOperationResource struct {
	State string `json:"state"`
	Description *string `json:"description,omitempty"`
	InstanceUsable *bool `json:"instance_usable,omitempty"`
	UpdateRepeatable *bool `json:"update_repeatable,omitempty"`
}

// NewLastOperationResource instantiates a new LastOperationResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLastOperationResource(state string, ) *LastOperationResource {
	this := LastOperationResource{}
	this.State = state
	return &this
}

// NewLastOperationResourceWithDefaults instantiates a new LastOperationResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLastOperationResourceWithDefaults() *LastOperationResource {
	this := LastOperationResource{}
	return &this
}

// GetState returns the State field value
func (o *LastOperationResource) GetState() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *LastOperationResource) GetStateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *LastOperationResource) SetState(v string) {
	o.State = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *LastOperationResource) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LastOperationResource) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *LastOperationResource) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *LastOperationResource) SetDescription(v string) {
	o.Description = &v
}

// GetInstanceUsable returns the InstanceUsable field value if set, zero value otherwise.
func (o *LastOperationResource) GetInstanceUsable() bool {
	if o == nil || o.InstanceUsable == nil {
		var ret bool
		return ret
	}
	return *o.InstanceUsable
}

// GetInstanceUsableOk returns a tuple with the InstanceUsable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LastOperationResource) GetInstanceUsableOk() (*bool, bool) {
	if o == nil || o.InstanceUsable == nil {
		return nil, false
	}
	return o.InstanceUsable, true
}

// HasInstanceUsable returns a boolean if a field has been set.
func (o *LastOperationResource) HasInstanceUsable() bool {
	if o != nil && o.InstanceUsable != nil {
		return true
	}

	return false
}

// SetInstanceUsable gets a reference to the given bool and assigns it to the InstanceUsable field.
func (o *LastOperationResource) SetInstanceUsable(v bool) {
	o.InstanceUsable = &v
}

// GetUpdateRepeatable returns the UpdateRepeatable field value if set, zero value otherwise.
func (o *LastOperationResource) GetUpdateRepeatable() bool {
	if o == nil || o.UpdateRepeatable == nil {
		var ret bool
		return ret
	}
	return *o.UpdateRepeatable
}

// GetUpdateRepeatableOk returns a tuple with the UpdateRepeatable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LastOperationResource) GetUpdateRepeatableOk() (*bool, bool) {
	if o == nil || o.UpdateRepeatable == nil {
		return nil, false
	}
	return o.UpdateRepeatable, true
}

// HasUpdateRepeatable returns a boolean if a field has been set.
func (o *LastOperationResource) HasUpdateRepeatable() bool {
	if o != nil && o.UpdateRepeatable != nil {
		return true
	}

	return false
}

// SetUpdateRepeatable gets a reference to the given bool and assigns it to the UpdateRepeatable field.
func (o *LastOperationResource) SetUpdateRepeatable(v bool) {
	o.UpdateRepeatable = &v
}

func (o LastOperationResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["state"] = o.State
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.InstanceUsable != nil {
		toSerialize["instance_usable"] = o.InstanceUsable
	}
	if o.UpdateRepeatable != nil {
		toSerialize["update_repeatable"] = o.UpdateRepeatable
	}
	return json.Marshal(toSerialize)
}

type NullableLastOperationResource struct {
	value *LastOperationResource
	isSet bool
}

func (v NullableLastOperationResource) Get() *LastOperationResource {
	return v.value
}

func (v *NullableLastOperationResource) Set(val *LastOperationResource) {
	v.value = val
	v.isSet = true
}

func (v NullableLastOperationResource) IsSet() bool {
	return v.isSet
}

func (v *NullableLastOperationResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLastOperationResource(val *LastOperationResource) *NullableLastOperationResource {
	return &NullableLastOperationResource{value: val, isSet: true}
}

func (v NullableLastOperationResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLastOperationResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


