/*
 * Open Service Broker API
 *
 * The Open Service Broker API defines an HTTP(S) interface between Platforms and Service Brokers.
 *
 * API version: master - might contain changes that are not yet released
 * Contact: open-service-broker-api@googlegroups.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gosb

import (
	"encoding/json"
)

// ServiceBindingVolumeMount struct for ServiceBindingVolumeMount
type ServiceBindingVolumeMount struct {
	Driver string `json:"driver"`
	ContainerDir string `json:"container_dir"`
	Mode string `json:"mode"`
	DeviceType string `json:"device_type"`
	Device ServiceBindingVolumeMountDevice `json:"device"`
}

// NewServiceBindingVolumeMount instantiates a new ServiceBindingVolumeMount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceBindingVolumeMount(driver string, containerDir string, mode string, deviceType string, device ServiceBindingVolumeMountDevice, ) *ServiceBindingVolumeMount {
	this := ServiceBindingVolumeMount{}
	this.Driver = driver
	this.ContainerDir = containerDir
	this.Mode = mode
	this.DeviceType = deviceType
	this.Device = device
	return &this
}

// NewServiceBindingVolumeMountWithDefaults instantiates a new ServiceBindingVolumeMount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceBindingVolumeMountWithDefaults() *ServiceBindingVolumeMount {
	this := ServiceBindingVolumeMount{}
	return &this
}

// GetDriver returns the Driver field value
func (o *ServiceBindingVolumeMount) GetDriver() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Driver
}

// GetDriverOk returns a tuple with the Driver field value
// and a boolean to check if the value has been set.
func (o *ServiceBindingVolumeMount) GetDriverOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Driver, true
}

// SetDriver sets field value
func (o *ServiceBindingVolumeMount) SetDriver(v string) {
	o.Driver = v
}

// GetContainerDir returns the ContainerDir field value
func (o *ServiceBindingVolumeMount) GetContainerDir() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ContainerDir
}

// GetContainerDirOk returns a tuple with the ContainerDir field value
// and a boolean to check if the value has been set.
func (o *ServiceBindingVolumeMount) GetContainerDirOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ContainerDir, true
}

// SetContainerDir sets field value
func (o *ServiceBindingVolumeMount) SetContainerDir(v string) {
	o.ContainerDir = v
}

// GetMode returns the Mode field value
func (o *ServiceBindingVolumeMount) GetMode() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Mode
}

// GetModeOk returns a tuple with the Mode field value
// and a boolean to check if the value has been set.
func (o *ServiceBindingVolumeMount) GetModeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Mode, true
}

// SetMode sets field value
func (o *ServiceBindingVolumeMount) SetMode(v string) {
	o.Mode = v
}

// GetDeviceType returns the DeviceType field value
func (o *ServiceBindingVolumeMount) GetDeviceType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.DeviceType
}

// GetDeviceTypeOk returns a tuple with the DeviceType field value
// and a boolean to check if the value has been set.
func (o *ServiceBindingVolumeMount) GetDeviceTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DeviceType, true
}

// SetDeviceType sets field value
func (o *ServiceBindingVolumeMount) SetDeviceType(v string) {
	o.DeviceType = v
}

// GetDevice returns the Device field value
func (o *ServiceBindingVolumeMount) GetDevice() ServiceBindingVolumeMountDevice {
	if o == nil  {
		var ret ServiceBindingVolumeMountDevice
		return ret
	}

	return o.Device
}

// GetDeviceOk returns a tuple with the Device field value
// and a boolean to check if the value has been set.
func (o *ServiceBindingVolumeMount) GetDeviceOk() (*ServiceBindingVolumeMountDevice, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Device, true
}

// SetDevice sets field value
func (o *ServiceBindingVolumeMount) SetDevice(v ServiceBindingVolumeMountDevice) {
	o.Device = v
}

func (o ServiceBindingVolumeMount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["driver"] = o.Driver
	}
	if true {
		toSerialize["container_dir"] = o.ContainerDir
	}
	if true {
		toSerialize["mode"] = o.Mode
	}
	if true {
		toSerialize["device_type"] = o.DeviceType
	}
	if true {
		toSerialize["device"] = o.Device
	}
	return json.Marshal(toSerialize)
}

type NullableServiceBindingVolumeMount struct {
	value *ServiceBindingVolumeMount
	isSet bool
}

func (v NullableServiceBindingVolumeMount) Get() *ServiceBindingVolumeMount {
	return v.value
}

func (v *NullableServiceBindingVolumeMount) Set(val *ServiceBindingVolumeMount) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceBindingVolumeMount) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceBindingVolumeMount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceBindingVolumeMount(val *ServiceBindingVolumeMount) *NullableServiceBindingVolumeMount {
	return &NullableServiceBindingVolumeMount{value: val, isSet: true}
}

func (v NullableServiceBindingVolumeMount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceBindingVolumeMount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


