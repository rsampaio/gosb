/*
 * Open Service Broker API
 *
 * The Open Service Broker API defines an HTTP(S) interface between Platforms and Service Brokers.
 *
 * API version: master - might contain changes that are not yet released
 * Contact: open-service-broker-api@googlegroups.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gosb

import (
	"encoding/json"
)

// ServiceBindingEndpoint struct for ServiceBindingEndpoint
type ServiceBindingEndpoint struct {
	Host string `json:"host"`
	Ports []string `json:"ports"`
	Protocol *string `json:"protocol,omitempty"`
}

// NewServiceBindingEndpoint instantiates a new ServiceBindingEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceBindingEndpoint(host string, ports []string, ) *ServiceBindingEndpoint {
	this := ServiceBindingEndpoint{}
	this.Host = host
	this.Ports = ports
	var protocol string = "tcp"
	this.Protocol = &protocol
	return &this
}

// NewServiceBindingEndpointWithDefaults instantiates a new ServiceBindingEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceBindingEndpointWithDefaults() *ServiceBindingEndpoint {
	this := ServiceBindingEndpoint{}
	var protocol string = "tcp"
	this.Protocol = &protocol
	return &this
}

// GetHost returns the Host field value
func (o *ServiceBindingEndpoint) GetHost() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Host
}

// GetHostOk returns a tuple with the Host field value
// and a boolean to check if the value has been set.
func (o *ServiceBindingEndpoint) GetHostOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Host, true
}

// SetHost sets field value
func (o *ServiceBindingEndpoint) SetHost(v string) {
	o.Host = v
}

// GetPorts returns the Ports field value
func (o *ServiceBindingEndpoint) GetPorts() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.Ports
}

// GetPortsOk returns a tuple with the Ports field value
// and a boolean to check if the value has been set.
func (o *ServiceBindingEndpoint) GetPortsOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Ports, true
}

// SetPorts sets field value
func (o *ServiceBindingEndpoint) SetPorts(v []string) {
	o.Ports = v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *ServiceBindingEndpoint) GetProtocol() string {
	if o == nil || o.Protocol == nil {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceBindingEndpoint) GetProtocolOk() (*string, bool) {
	if o == nil || o.Protocol == nil {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *ServiceBindingEndpoint) HasProtocol() bool {
	if o != nil && o.Protocol != nil {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *ServiceBindingEndpoint) SetProtocol(v string) {
	o.Protocol = &v
}

func (o ServiceBindingEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["host"] = o.Host
	}
	if true {
		toSerialize["ports"] = o.Ports
	}
	if o.Protocol != nil {
		toSerialize["protocol"] = o.Protocol
	}
	return json.Marshal(toSerialize)
}

type NullableServiceBindingEndpoint struct {
	value *ServiceBindingEndpoint
	isSet bool
}

func (v NullableServiceBindingEndpoint) Get() *ServiceBindingEndpoint {
	return v.value
}

func (v *NullableServiceBindingEndpoint) Set(val *ServiceBindingEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceBindingEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceBindingEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceBindingEndpoint(val *ServiceBindingEndpoint) *NullableServiceBindingEndpoint {
	return &NullableServiceBindingEndpoint{value: val, isSet: true}
}

func (v NullableServiceBindingEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceBindingEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


