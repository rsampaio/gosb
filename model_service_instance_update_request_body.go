/*
 * Open Service Broker API
 *
 * The Open Service Broker API defines an HTTP(S) interface between Platforms and Service Brokers.
 *
 * API version: master - might contain changes that are not yet released
 * Contact: open-service-broker-api@googlegroups.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gosb

import (
	"encoding/json"
)

// ServiceInstanceUpdateRequestBody struct for ServiceInstanceUpdateRequestBody
type ServiceInstanceUpdateRequestBody struct {
	// See [Context Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#context-object) for more details.
	Context *map[string]interface{} `json:"context,omitempty"`
	ServiceId string `json:"service_id"`
	PlanId *string `json:"plan_id,omitempty"`
	Parameters *map[string]interface{} `json:"parameters,omitempty"`
	PreviousValues *ServiceInstancePreviousValues `json:"previous_values,omitempty"`
}

// NewServiceInstanceUpdateRequestBody instantiates a new ServiceInstanceUpdateRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceInstanceUpdateRequestBody(serviceId string, ) *ServiceInstanceUpdateRequestBody {
	this := ServiceInstanceUpdateRequestBody{}
	this.ServiceId = serviceId
	return &this
}

// NewServiceInstanceUpdateRequestBodyWithDefaults instantiates a new ServiceInstanceUpdateRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceInstanceUpdateRequestBodyWithDefaults() *ServiceInstanceUpdateRequestBody {
	this := ServiceInstanceUpdateRequestBody{}
	return &this
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *ServiceInstanceUpdateRequestBody) GetContext() map[string]interface{} {
	if o == nil || o.Context == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceInstanceUpdateRequestBody) GetContextOk() (*map[string]interface{}, bool) {
	if o == nil || o.Context == nil {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *ServiceInstanceUpdateRequestBody) HasContext() bool {
	if o != nil && o.Context != nil {
		return true
	}

	return false
}

// SetContext gets a reference to the given map[string]interface{} and assigns it to the Context field.
func (o *ServiceInstanceUpdateRequestBody) SetContext(v map[string]interface{}) {
	o.Context = &v
}

// GetServiceId returns the ServiceId field value
func (o *ServiceInstanceUpdateRequestBody) GetServiceId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *ServiceInstanceUpdateRequestBody) GetServiceIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *ServiceInstanceUpdateRequestBody) SetServiceId(v string) {
	o.ServiceId = v
}

// GetPlanId returns the PlanId field value if set, zero value otherwise.
func (o *ServiceInstanceUpdateRequestBody) GetPlanId() string {
	if o == nil || o.PlanId == nil {
		var ret string
		return ret
	}
	return *o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceInstanceUpdateRequestBody) GetPlanIdOk() (*string, bool) {
	if o == nil || o.PlanId == nil {
		return nil, false
	}
	return o.PlanId, true
}

// HasPlanId returns a boolean if a field has been set.
func (o *ServiceInstanceUpdateRequestBody) HasPlanId() bool {
	if o != nil && o.PlanId != nil {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given string and assigns it to the PlanId field.
func (o *ServiceInstanceUpdateRequestBody) SetPlanId(v string) {
	o.PlanId = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *ServiceInstanceUpdateRequestBody) GetParameters() map[string]interface{} {
	if o == nil || o.Parameters == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceInstanceUpdateRequestBody) GetParametersOk() (*map[string]interface{}, bool) {
	if o == nil || o.Parameters == nil {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *ServiceInstanceUpdateRequestBody) HasParameters() bool {
	if o != nil && o.Parameters != nil {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]interface{} and assigns it to the Parameters field.
func (o *ServiceInstanceUpdateRequestBody) SetParameters(v map[string]interface{}) {
	o.Parameters = &v
}

// GetPreviousValues returns the PreviousValues field value if set, zero value otherwise.
func (o *ServiceInstanceUpdateRequestBody) GetPreviousValues() ServiceInstancePreviousValues {
	if o == nil || o.PreviousValues == nil {
		var ret ServiceInstancePreviousValues
		return ret
	}
	return *o.PreviousValues
}

// GetPreviousValuesOk returns a tuple with the PreviousValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceInstanceUpdateRequestBody) GetPreviousValuesOk() (*ServiceInstancePreviousValues, bool) {
	if o == nil || o.PreviousValues == nil {
		return nil, false
	}
	return o.PreviousValues, true
}

// HasPreviousValues returns a boolean if a field has been set.
func (o *ServiceInstanceUpdateRequestBody) HasPreviousValues() bool {
	if o != nil && o.PreviousValues != nil {
		return true
	}

	return false
}

// SetPreviousValues gets a reference to the given ServiceInstancePreviousValues and assigns it to the PreviousValues field.
func (o *ServiceInstanceUpdateRequestBody) SetPreviousValues(v ServiceInstancePreviousValues) {
	o.PreviousValues = &v
}

func (o ServiceInstanceUpdateRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Context != nil {
		toSerialize["context"] = o.Context
	}
	if true {
		toSerialize["service_id"] = o.ServiceId
	}
	if o.PlanId != nil {
		toSerialize["plan_id"] = o.PlanId
	}
	if o.Parameters != nil {
		toSerialize["parameters"] = o.Parameters
	}
	if o.PreviousValues != nil {
		toSerialize["previous_values"] = o.PreviousValues
	}
	return json.Marshal(toSerialize)
}

type NullableServiceInstanceUpdateRequestBody struct {
	value *ServiceInstanceUpdateRequestBody
	isSet bool
}

func (v NullableServiceInstanceUpdateRequestBody) Get() *ServiceInstanceUpdateRequestBody {
	return v.value
}

func (v *NullableServiceInstanceUpdateRequestBody) Set(val *ServiceInstanceUpdateRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceInstanceUpdateRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceInstanceUpdateRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceInstanceUpdateRequestBody(val *ServiceInstanceUpdateRequestBody) *NullableServiceInstanceUpdateRequestBody {
	return &NullableServiceInstanceUpdateRequestBody{value: val, isSet: true}
}

func (v NullableServiceInstanceUpdateRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceInstanceUpdateRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


