openapi: 3.0.0
info:
  contact:
    email: open-service-broker-api@googlegroups.com
    name: Open Service Broker API
    url: https://www.openservicebrokerapi.org/
  description: The Open Service Broker API defines an HTTP(S) interface between Platforms
    and Service Brokers.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Open Service Broker API
  version: master - might contain changes that are not yet released
externalDocs:
  description: The offical Open Service Broker API specification
  url: https://github.com/openservicebrokerapi/servicebroker/
servers:
- description: Broker Endpoint
  url: http://example.com
- description: OSB Checker - MockOSB
  url: http://localhost:3000
security:
- basicAuth: []
tags:
- name: Open Service Broker API Specification
paths:
  /v2/catalog:
    get:
      operationId: catalog.get
      parameters:
      - description: version number of the Service Broker API that the Platform will
          use
        explode: false
        in: header
        name: X-Broker-API-Version
        required: true
        schema:
          default: "2.13"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalog'
          description: catalog response
      summary: get the catalog of services that the service broker offers
      tags:
      - Catalog
  /v2/service_instances/{instance_id}:
    delete:
      operationId: serviceInstance.deprovision
      parameters:
      - description: version number of the Service Broker API that the Platform will
          use
        explode: false
        in: header
        name: X-Broker-API-Version
        required: true
        schema:
          default: "2.13"
          type: string
        style: simple
      - description: identity of the user that initiated the request from the Platform
        explode: false
        in: header
        name: X-Broker-API-Originating-Identity
        required: false
        schema:
          type: string
        style: simple
      - description: id of instance being deleted
        explode: false
        in: path
        name: instance_id
        required: true
        schema:
          type: string
        style: simple
      - description: id of the service associated with the instance being deleted
        explode: true
        in: query
        name: service_id
        required: true
        schema:
          type: string
        style: form
      - description: id of the plan associated with the instance being deleted
        explode: true
        in: query
        name: plan_id
        required: true
        schema:
          type: string
        style: form
      - description: asynchronous deprovision supported
        explode: true
        in: query
        name: accepts_incomplete
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperation'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Gone
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
      summary: deprovision a service instance
      tags:
      - ServiceInstances
    get:
      operationId: serviceInstance.get
      parameters:
      - description: version number of the Service Broker API that the Platform will
          use
        explode: false
        in: header
        name: X-Broker-API-Version
        required: true
        schema:
          default: "2.13"
          type: string
        style: simple
      - description: identity of the user that initiated the request from the Platform
        explode: false
        in: header
        name: X-Broker-API-Originating-Identity
        required: false
        schema:
          type: string
        style: simple
      - description: instance id of instance to fetch
        explode: false
        in: path
        name: instance_id
        required: true
        schema:
          type: string
        style: simple
      - description: id of the service associated with the instance
        explode: true
        in: query
        name: service_id
        required: false
        schema:
          type: string
        style: form
      - description: id of the plan associated with the instance
        explode: true
        in: query
        name: plan_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInstanceResource'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: get a service instance
      tags:
      - ServiceInstances
    patch:
      operationId: serviceInstance.update
      parameters:
      - description: version number of the Service Broker API that the Platform will
          use
        explode: false
        in: header
        name: X-Broker-API-Version
        required: true
        schema:
          default: "2.13"
          type: string
        style: simple
      - description: identity of the user that initiated the request from the Platform
        explode: false
        in: header
        name: X-Broker-API-Originating-Identity
        required: false
        schema:
          type: string
        style: simple
      - description: instance id of instance to update
        explode: false
        in: path
        name: instance_id
        required: true
        schema:
          type: string
        style: simple
      - description: asynchronous operations supported
        explode: true
        in: query
        name: accepts_incomplete
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceInstanceUpdateRequestBody'
        description: parameters for the requested service instance update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInstanceAsyncOperation'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable entity
      summary: update a service instance
      tags:
      - ServiceInstances
    put:
      operationId: serviceInstance.provision
      parameters:
      - description: version number of the Service Broker API that the Platform will
          use
        explode: false
        in: header
        name: X-Broker-API-Version
        required: true
        schema:
          default: "2.13"
          type: string
        style: simple
      - description: identity of the user that initiated the request from the Platform
        explode: false
        in: header
        name: X-Broker-API-Originating-Identity
        required: false
        schema:
          type: string
        style: simple
      - description: instance id of instance to provision
        explode: false
        in: path
        name: instance_id
        required: true
        schema:
          type: string
        style: simple
      - description: asynchronous operations supported
        explode: true
        in: query
        name: accepts_incomplete
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceInstanceProvisionRequestBody'
        description: parameters for the requested service instance provision
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInstanceProvisionResponse'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInstanceProvisionResponse'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInstanceAsyncOperation'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
      summary: provision a service instance
      tags:
      - ServiceInstances
  /v2/service_instances/{instance_id}/last_operation:
    get:
      operationId: serviceInstance.lastOperation.get
      parameters:
      - description: version number of the Service Broker API that the Platform will
          use
        explode: false
        in: header
        name: X-Broker-API-Version
        required: true
        schema:
          default: "2.13"
          type: string
        style: simple
      - description: instance id of instance to find last operation applied to it
        explode: false
        in: path
        name: instance_id
        required: true
        schema:
          type: string
        style: simple
      - description: id of the service associated with the instance
        explode: true
        in: query
        name: service_id
        required: false
        schema:
          type: string
        style: form
      - description: id of the plan associated with the instance
        explode: true
        in: query
        name: plan_id
        required: false
        schema:
          type: string
        style: form
      - description: a provided identifier for the operation
        explode: true
        in: query
        name: operation
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LastOperationResource'
          description: OK
          headers:
            Retry-After:
              description: Indicates when to retry the request
              explode: false
              required: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Gone
      summary: get the last requested operation state for service instance
      tags:
      - ServiceInstances
  /v2/service_instances/{instance_id}/service_bindings/{binding_id}/last_operation:
    get:
      operationId: serviceBinding.lastOperation.get
      parameters:
      - description: version number of the Service Broker API that the Platform will
          use
        explode: false
        in: header
        name: X-Broker-API-Version
        required: true
        schema:
          default: "2.13"
          type: string
        style: simple
      - description: instance id of instance to find last operation applied to it
        explode: false
        in: path
        name: instance_id
        required: true
        schema:
          type: string
        style: simple
      - description: binding id of service binding to find last operation applied
          to it
        explode: false
        in: path
        name: binding_id
        required: true
        schema:
          type: string
        style: simple
      - description: id of the service associated with the instance
        explode: true
        in: query
        name: service_id
        required: false
        schema:
          type: string
        style: form
      - description: id of the plan associated with the instance
        explode: true
        in: query
        name: plan_id
        required: false
        schema:
          type: string
        style: form
      - description: a provided identifier for the operation
        explode: true
        in: query
        name: operation
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LastOperationResource'
          description: OK
          headers:
            Retry-After:
              description: Indicates when to retry the request
              explode: false
              required: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Gone
      summary: get the last requested operation state for service binding
      tags:
      - ServiceBindings
  /v2/service_instances/{instance_id}/service_bindings/{binding_id}:
    delete:
      operationId: serviceBinding.unbinding
      parameters:
      - description: version number of the Service Broker API that the Platform will
          use
        explode: false
        in: header
        name: X-Broker-API-Version
        required: true
        schema:
          default: "2.13"
          type: string
        style: simple
      - description: identity of the user that initiated the request from the Platform
        explode: false
        in: header
        name: X-Broker-API-Originating-Identity
        required: false
        schema:
          type: string
        style: simple
      - description: id of the instance associated with the binding being deleted
        explode: false
        in: path
        name: instance_id
        required: true
        schema:
          type: string
        style: simple
      - description: id of the binding being deleted
        explode: false
        in: path
        name: binding_id
        required: true
        schema:
          type: string
        style: simple
      - description: id of the service associated with the instance for which a binding
          is being deleted
        explode: true
        in: query
        name: service_id
        required: true
        schema:
          type: string
        style: form
      - description: id of the plan associated with the instance for which a binding
          is being deleted
        explode: true
        in: query
        name: plan_id
        required: true
        schema:
          type: string
        style: form
      - description: asynchronous operations supported
        explode: true
        in: query
        name: accepts_incomplete
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperation'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Gone
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
      summary: deprovision a service binding
      tags:
      - ServiceBindings
    get:
      operationId: serviceBinding.get
      parameters:
      - description: version number of the Service Broker API that the Platform will
          use
        explode: false
        in: header
        name: X-Broker-API-Version
        required: true
        schema:
          default: "2.13"
          type: string
        style: simple
      - description: identity of the user that initiated the request from the Platform
        explode: false
        in: header
        name: X-Broker-API-Originating-Identity
        required: false
        schema:
          type: string
        style: simple
      - description: instance id of instance associated with the binding
        explode: false
        in: path
        name: instance_id
        required: true
        schema:
          type: string
        style: simple
      - description: binding id of binding to fetch
        explode: false
        in: path
        name: binding_id
        required: true
        schema:
          type: string
        style: simple
      - description: id of the service associated with the instance
        explode: true
        in: query
        name: service_id
        required: false
        schema:
          type: string
        style: form
      - description: id of the plan associated with the instance
        explode: true
        in: query
        name: plan_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBindingResource'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: get a service binding
      tags:
      - ServiceBindings
    put:
      operationId: serviceBinding.binding
      parameters:
      - description: version number of the Service Broker API that the Platform will
          use
        explode: false
        in: header
        name: X-Broker-API-Version
        required: true
        schema:
          default: "2.13"
          type: string
        style: simple
      - description: identity of the user that initiated the request from the Platform
        explode: false
        in: header
        name: X-Broker-API-Originating-Identity
        required: false
        schema:
          type: string
        style: simple
      - description: instance id of instance to create a binding on
        explode: false
        in: path
        name: instance_id
        required: true
        schema:
          type: string
        style: simple
      - description: binding id of binding to create
        explode: false
        in: path
        name: binding_id
        required: true
        schema:
          type: string
        style: simple
      - description: asynchronous operations supported
        explode: true
        in: query
        name: accepts_incomplete
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceBindingRequest'
        description: parameters for the requested service binding
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBindingResponse'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBindingResponse'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperation'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
      summary: generate a service binding
      tags:
      - ServiceBindings
components:
  parameters:
    APIVersion:
      description: version number of the Service Broker API that the Platform will
        use
      explode: false
      in: header
      name: X-Broker-API-Version
      required: true
      schema:
        default: "2.13"
        type: string
      style: simple
    OriginatingIdentity:
      description: identity of the user that initiated the request from the Platform
      explode: false
      in: header
      name: X-Broker-API-Originating-Identity
      required: false
      schema:
        type: string
      style: simple
  schemas:
    Catalog:
      example:
        services:
        - bindable: true
          metadata: '{}'
          plan_updateable: true
          plans:
          - metadata: '{}'
            bindable: true
            maintenance_info:
              description: description
              version: version
            schemas:
              service_binding:
                create:
                  parameters: '{}'
              service_instance:
                create:
                  parameters: '{}'
                update:
                  parameters: '{}'
            name: name
            description: description
            id: id
            free: true
          - metadata: '{}'
            bindable: true
            maintenance_info:
              description: description
              version: version
            schemas:
              service_binding:
                create:
                  parameters: '{}'
              service_instance:
                create:
                  parameters: '{}'
                update:
                  parameters: '{}'
            name: name
            description: description
            id: id
            free: true
          name: name
          binding_rotatable: true
          description: description
          id: id
          dashboard_client:
            id: id
            secret: secret
            redirect_uri: redirect_uri
          tags:
          - tags
          - tags
          requires:
          - syslog_drain
          - syslog_drain
        - bindable: true
          metadata: '{}'
          plan_updateable: true
          plans:
          - metadata: '{}'
            bindable: true
            maintenance_info:
              description: description
              version: version
            schemas:
              service_binding:
                create:
                  parameters: '{}'
              service_instance:
                create:
                  parameters: '{}'
                update:
                  parameters: '{}'
            name: name
            description: description
            id: id
            free: true
          - metadata: '{}'
            bindable: true
            maintenance_info:
              description: description
              version: version
            schemas:
              service_binding:
                create:
                  parameters: '{}'
              service_instance:
                create:
                  parameters: '{}'
                update:
                  parameters: '{}'
            name: name
            description: description
            id: id
            free: true
          name: name
          binding_rotatable: true
          description: description
          id: id
          dashboard_client:
            id: id
            secret: secret
            redirect_uri: redirect_uri
          tags:
          - tags
          - tags
          requires:
          - syslog_drain
          - syslog_drain
      properties:
        services:
          items:
            $ref: '#/components/schemas/Service'
          type: array
      type: object
    Service:
      example:
        bindable: true
        metadata: '{}'
        plan_updateable: true
        plans:
        - metadata: '{}'
          bindable: true
          maintenance_info:
            description: description
            version: version
          schemas:
            service_binding:
              create:
                parameters: '{}'
            service_instance:
              create:
                parameters: '{}'
              update:
                parameters: '{}'
          name: name
          description: description
          id: id
          free: true
        - metadata: '{}'
          bindable: true
          maintenance_info:
            description: description
            version: version
          schemas:
            service_binding:
              create:
                parameters: '{}'
            service_instance:
              create:
                parameters: '{}'
              update:
                parameters: '{}'
          name: name
          description: description
          id: id
          free: true
        name: name
        binding_rotatable: true
        description: description
        id: id
        dashboard_client:
          id: id
          secret: secret
          redirect_uri: redirect_uri
        tags:
        - tags
        - tags
        requires:
        - syslog_drain
        - syslog_drain
      properties:
        name:
          type: string
        id:
          type: string
        description:
          type: string
        tags:
          items:
            type: string
          type: array
        requires:
          items:
            enum:
            - syslog_drain
            - route_forwarding
            - volume_mount
            type: string
          type: array
        bindable:
          type: boolean
        metadata:
          description: See [Service Metadata Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#service-metadata)
            for more details.
          type: object
        dashboard_client:
          $ref: '#/components/schemas/DashboardClient'
        binding_rotatable:
          type: boolean
        plan_updateable:
          type: boolean
        plans:
          items:
            $ref: '#/components/schemas/Plan'
          type: array
      required:
      - bindable
      - description
      - id
      - name
      - plans
      type: object
    DashboardClient:
      example:
        id: id
        secret: secret
        redirect_uri: redirect_uri
      properties:
        id:
          type: string
        secret:
          type: string
        redirect_uri:
          type: string
      type: object
    Plan:
      example:
        metadata: '{}'
        bindable: true
        maintenance_info:
          description: description
          version: version
        schemas:
          service_binding:
            create:
              parameters: '{}'
          service_instance:
            create:
              parameters: '{}'
            update:
              parameters: '{}'
        name: name
        description: description
        id: id
        free: true
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        metadata:
          description: See [Service Metadata Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#service-metadata)
            for more details.
          type: object
        maintenance_info:
          $ref: '#/components/schemas/MaintenanceInfo'
        free:
          default: true
          type: boolean
        bindable:
          type: boolean
        schemas:
          $ref: '#/components/schemas/Schemas'
      required:
      - description
      - id
      - name
      type: object
    Schemas:
      example:
        service_binding:
          create:
            parameters: '{}'
        service_instance:
          create:
            parameters: '{}'
          update:
            parameters: '{}'
      properties:
        service_instance:
          $ref: '#/components/schemas/ServiceInstanceSchema'
        service_binding:
          $ref: '#/components/schemas/ServiceBindingSchema'
      type: object
    ServiceInstanceSchema:
      example:
        create:
          parameters: '{}'
        update:
          parameters: '{}'
      properties:
        create:
          $ref: '#/components/schemas/ServiceInstanceSchema_create'
        update:
          $ref: '#/components/schemas/ServiceInstanceSchema_create'
      type: object
    ServiceBindingSchema:
      example:
        create:
          parameters: '{}'
      properties:
        create:
          $ref: '#/components/schemas/ServiceInstanceSchema_create'
      type: object
    ServiceInstanceResource:
      example:
        metadata:
          attributes: '{}'
          labels: '{}'
        maintenance_info:
          description: description
          version: version
        service_id: service_id
        dashboard_url: dashboard_url
        parameters: '{}'
        plan_id: plan_id
      properties:
        service_id:
          type: string
        plan_id:
          type: string
        dashboard_url:
          type: string
        parameters:
          type: object
        maintenance_info:
          $ref: '#/components/schemas/MaintenanceInfo'
        metadata:
          $ref: '#/components/schemas/ServiceInstanceMetadata'
      type: object
    ServiceInstanceProvisionRequestBody:
      example:
        service_id: service_id
        context: '{}'
        organization_guid: organization_guid
        space_guid: space_guid
        parameters: '{}'
        plan_id: plan_id
      properties:
        service_id:
          type: string
        plan_id:
          type: string
        context:
          description: See [Context Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#context-object)
            for more details.
          type: object
        organization_guid:
          deprecated: true
          type: string
        space_guid:
          deprecated: true
          type: string
        parameters:
          type: object
      required:
      - organization_guid
      - plan_id
      - service_id
      - space_guid
      type: object
    ServiceInstanceProvisionResponse:
      example:
        metadata:
          attributes: '{}'
          labels: '{}'
        dashboard_url: dashboard_url
      properties:
        dashboard_url:
          type: string
        metadata:
          $ref: '#/components/schemas/ServiceInstanceMetadata'
      type: object
    ServiceInstanceAsyncOperation:
      properties:
        dashboard_url:
          type: string
        operation:
          type: string
        metadata:
          $ref: '#/components/schemas/ServiceInstanceMetadata'
      type: object
    ServiceInstanceMetadata:
      example:
        attributes: '{}'
        labels: '{}'
      properties:
        labels:
          type: object
        attributes:
          type: object
      type: object
    ServiceInstanceUpdateRequestBody:
      example:
        previous_values:
          service_id: service_id
          organization_id: organization_id
          space_id: space_id
          plan_id: plan_id
        service_id: service_id
        context: '{}'
        parameters: '{}'
        plan_id: plan_id
      properties:
        context:
          description: See [Context Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#context-object)
            for more details.
          type: object
        service_id:
          type: string
        plan_id:
          type: string
        parameters:
          type: object
        previous_values:
          $ref: '#/components/schemas/ServiceInstancePreviousValues'
      required:
      - service_id
      type: object
    ServiceInstancePreviousValues:
      example:
        service_id: service_id
        organization_id: organization_id
        space_id: space_id
        plan_id: plan_id
      properties:
        service_id:
          deprecated: true
          type: string
        plan_id:
          type: string
        organization_id:
          deprecated: true
          type: string
        space_id:
          deprecated: true
          type: string
      type: object
    AsyncOperation:
      properties:
        operation:
          type: string
      type: object
    LastOperationResource:
      example:
        instance_usable: true
        update_repeatable: true
        description: description
        state: in progress
      properties:
        state:
          enum:
          - in progress
          - succeeded
          - failed
          type: string
        description:
          type: string
        instance_usable:
          type: boolean
        update_repeatable:
          type: boolean
      required:
      - state
      type: object
    ServiceBindingResource:
      example:
        metadata:
          expires_at: expires_at
          renew_before: renew_before
        route_service_url: route_service_url
        endpoints:
        - protocol: tcp
          host: host
          ports:
          - ports
          - ports
        - protocol: tcp
          host: host
          ports:
          - ports
          - ports
        credentials: '{}'
        syslog_drain_url: syslog_drain_url
        volume_mounts:
        - mode: r
          driver: driver
          device_type: shared
          device:
            volume_id: volume_id
            mount_config: '{}'
          container_dir: container_dir
        - mode: r
          driver: driver
          device_type: shared
          device:
            volume_id: volume_id
            mount_config: '{}'
          container_dir: container_dir
        parameters: '{}'
      properties:
        metadata:
          $ref: '#/components/schemas/ServiceBindingMetadata'
        credentials:
          type: object
        syslog_drain_url:
          type: string
        route_service_url:
          type: string
        volume_mounts:
          items:
            $ref: '#/components/schemas/ServiceBindingVolumeMount'
          type: array
        endpoints:
          items:
            $ref: '#/components/schemas/ServiceBindingEndpoint'
          type: array
        parameters:
          type: object
      type: object
    ServiceBindingRequest:
      example:
        app_guid: app_guid
        predecessor_binding_id: predecessor_binding_id
        service_id: service_id
        context: '{}'
        bind_resource:
          app_guid: app_guid
          route: route
        parameters: '{}'
        plan_id: plan_id
      properties:
        context:
          description: See [Context Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#context-object)
            for more details.
          type: object
        service_id:
          type: string
        plan_id:
          type: string
        app_guid:
          deprecated: true
          type: string
        bind_resource:
          $ref: '#/components/schemas/ServiceBindingResouceObject'
        parameters:
          type: object
        predecessor_binding_id:
          type: string
      required:
      - plan_id
      - service_id
      type: object
    ServiceBindingMetadata:
      example:
        expires_at: expires_at
        renew_before: renew_before
      properties:
        expires_at:
          type: string
        renew_before:
          type: string
      type: object
    ServiceBindingResouceObject:
      example:
        app_guid: app_guid
        route: route
      properties:
        app_guid:
          type: string
        route:
          type: string
      type: object
    ServiceBindingResponse:
      example:
        metadata:
          expires_at: expires_at
          renew_before: renew_before
        route_service_url: route_service_url
        endpoints:
        - protocol: tcp
          host: host
          ports:
          - ports
          - ports
        - protocol: tcp
          host: host
          ports:
          - ports
          - ports
        credentials: '{}'
        syslog_drain_url: syslog_drain_url
        volume_mounts:
        - mode: r
          driver: driver
          device_type: shared
          device:
            volume_id: volume_id
            mount_config: '{}'
          container_dir: container_dir
        - mode: r
          driver: driver
          device_type: shared
          device:
            volume_id: volume_id
            mount_config: '{}'
          container_dir: container_dir
      properties:
        metadata:
          $ref: '#/components/schemas/ServiceBindingMetadata'
        credentials:
          type: object
        syslog_drain_url:
          type: string
        route_service_url:
          type: string
        volume_mounts:
          items:
            $ref: '#/components/schemas/ServiceBindingVolumeMount'
          type: array
        endpoints:
          items:
            $ref: '#/components/schemas/ServiceBindingEndpoint'
          type: array
      type: object
    ServiceBindingEndpoint:
      example:
        protocol: tcp
        host: host
        ports:
        - ports
        - ports
      properties:
        host:
          type: string
        ports:
          items:
            type: string
          type: array
        protocol:
          default: tcp
          enum:
          - tcp
          - udp
          - all
          type: string
      required:
      - host
      - ports
      type: object
    ServiceBindingVolumeMount:
      example:
        mode: r
        driver: driver
        device_type: shared
        device:
          volume_id: volume_id
          mount_config: '{}'
        container_dir: container_dir
      properties:
        driver:
          type: string
        container_dir:
          type: string
        mode:
          enum:
          - r
          - rw
          type: string
        device_type:
          enum:
          - shared
          type: string
        device:
          $ref: '#/components/schemas/ServiceBindingVolumeMountDevice'
      required:
      - container_dir
      - device
      - device_type
      - driver
      - mode
      type: object
    ServiceBindingVolumeMountDevice:
      example:
        volume_id: volume_id
        mount_config: '{}'
      properties:
        volume_id:
          type: string
        mount_config:
          type: object
      required:
      - volume_id
      type: object
    Context:
      description: See [Context Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#context-object)
        for more details.
      type: object
    Metadata:
      description: See [Service Metadata Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#service-metadata)
        for more details.
      type: object
    MaintenanceInfo:
      example:
        description: description
        version: version
      properties:
        version:
          type: string
        description:
          type: string
      required:
      - version
      type: object
    Object:
      type: object
    Error:
      description: See [Service Broker Errors](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors)
        for more details.
      properties:
        error:
          type: string
        description:
          type: string
        instance_usable:
          type: boolean
        update_repeatable:
          type: boolean
      type: object
    ServiceInstanceSchema_create:
      example:
        parameters: '{}'
      properties:
        parameters:
          type: object
      type: object
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
