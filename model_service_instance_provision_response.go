/*
 * Open Service Broker API
 *
 * The Open Service Broker API defines an HTTP(S) interface between Platforms and Service Brokers.
 *
 * API version: master - might contain changes that are not yet released
 * Contact: open-service-broker-api@googlegroups.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gosb

import (
	"encoding/json"
)

// ServiceInstanceProvisionResponse struct for ServiceInstanceProvisionResponse
type ServiceInstanceProvisionResponse struct {
	DashboardUrl *string `json:"dashboard_url,omitempty"`
	Metadata *ServiceInstanceMetadata `json:"metadata,omitempty"`
}

// NewServiceInstanceProvisionResponse instantiates a new ServiceInstanceProvisionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceInstanceProvisionResponse() *ServiceInstanceProvisionResponse {
	this := ServiceInstanceProvisionResponse{}
	return &this
}

// NewServiceInstanceProvisionResponseWithDefaults instantiates a new ServiceInstanceProvisionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceInstanceProvisionResponseWithDefaults() *ServiceInstanceProvisionResponse {
	this := ServiceInstanceProvisionResponse{}
	return &this
}

// GetDashboardUrl returns the DashboardUrl field value if set, zero value otherwise.
func (o *ServiceInstanceProvisionResponse) GetDashboardUrl() string {
	if o == nil || o.DashboardUrl == nil {
		var ret string
		return ret
	}
	return *o.DashboardUrl
}

// GetDashboardUrlOk returns a tuple with the DashboardUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceInstanceProvisionResponse) GetDashboardUrlOk() (*string, bool) {
	if o == nil || o.DashboardUrl == nil {
		return nil, false
	}
	return o.DashboardUrl, true
}

// HasDashboardUrl returns a boolean if a field has been set.
func (o *ServiceInstanceProvisionResponse) HasDashboardUrl() bool {
	if o != nil && o.DashboardUrl != nil {
		return true
	}

	return false
}

// SetDashboardUrl gets a reference to the given string and assigns it to the DashboardUrl field.
func (o *ServiceInstanceProvisionResponse) SetDashboardUrl(v string) {
	o.DashboardUrl = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ServiceInstanceProvisionResponse) GetMetadata() ServiceInstanceMetadata {
	if o == nil || o.Metadata == nil {
		var ret ServiceInstanceMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceInstanceProvisionResponse) GetMetadataOk() (*ServiceInstanceMetadata, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ServiceInstanceProvisionResponse) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given ServiceInstanceMetadata and assigns it to the Metadata field.
func (o *ServiceInstanceProvisionResponse) SetMetadata(v ServiceInstanceMetadata) {
	o.Metadata = &v
}

func (o ServiceInstanceProvisionResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DashboardUrl != nil {
		toSerialize["dashboard_url"] = o.DashboardUrl
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableServiceInstanceProvisionResponse struct {
	value *ServiceInstanceProvisionResponse
	isSet bool
}

func (v NullableServiceInstanceProvisionResponse) Get() *ServiceInstanceProvisionResponse {
	return v.value
}

func (v *NullableServiceInstanceProvisionResponse) Set(val *ServiceInstanceProvisionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceInstanceProvisionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceInstanceProvisionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceInstanceProvisionResponse(val *ServiceInstanceProvisionResponse) *NullableServiceInstanceProvisionResponse {
	return &NullableServiceInstanceProvisionResponse{value: val, isSet: true}
}

func (v NullableServiceInstanceProvisionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceInstanceProvisionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


